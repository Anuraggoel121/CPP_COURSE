#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node * next;
};
void linkedlisttraversal(struct node * ptr)
{
    while(ptr!=NULL)
    {
        printf("element : %d\n",ptr->data);
        ptr=ptr->next;
    }
}
// at first
struct node * insertatfirst(struct node*head,int data)
{
    struct node*ptr=(struct node*)malloc(sizeof(struct node));
    ptr->data=data;
    ptr->next=head;
    return ptr;
}
// at index
struct node*insertatindex(struct node*head,int data,int index)
{
    struct node*ptr=(struct node*)malloc(sizeof(struct node));
    struct node*p=head;
    int i=0;
    while(i!=index-1)
    {
        p=p->next;
        i++;
    }
    ptr->data=data;
    ptr->next=p->next;
    p->next=ptr;
    return head;
}
// at end
struct node*insertatend(struct node*head,int data)
{
    struct node*ptr=(struct node*)malloc(sizeof(struct node));
    ptr->data=data;
    struct node*p=head;
    while(p->next!=NULL)
    {
        p=p->next;
    }
    p->next=ptr;
    ptr->next=NULL;
    return head;
}

int main()
{
    struct node * head;
    struct node * second;
    // memory allocation
    head = (struct node *)malloc(sizeof(struct node));
    second = (struct node *)malloc(sizeof(struct node));
    // link first and second 
    head->data=3;
    head->next=second;
    //terminate list at second node
    second->data=4;
    second->next=NULL;
    //call traversal
    linkedlisttraversal (head);
  // head= insertatfirst (head,33);
   head= insertatindex (head,33,2);
     //head= insertatend (head,33);
    linkedlisttraversal (head);
}